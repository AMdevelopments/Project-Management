{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Desktop\\\\Project-Management\\\\client\\\\src\\\\components\\\\Projects\\\\Projects.js\",\n  _s = $RefreshSig$();\n//Projects.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Projects.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState({\n    title: '',\n    description: '',\n    status: 'open'\n  });\n  const userId = 1; // Placeholder: Replace with actual logic to retrieve user ID\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/projects');\n      setProjects(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch projects\", error);\n    }\n  };\n  const handleAddProject = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/projects', {\n        ...newProject,\n        user_id: userId // Assign to user upon creation for simplicity\n      });\n      fetchProjects();\n      setNewProject({\n        title: '',\n        description: '',\n        status: 'open'\n      });\n    } catch (error) {\n      console.error(\"Failed to add project\", error);\n    }\n  };\n  const handleAssignToUser = async projectId => {\n    try {\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\n        user_id: userId // Reassign or confirm assignment to the user\n      });\n      fetchProjects();\n    } catch (error) {\n      console.error(\"Failed to assign project\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newProject.title,\n        onChange: e => setNewProject({\n          ...newProject,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: newProject.description,\n        onChange: e => setNewProject({\n          ...newProject,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", project.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Assigned to: \", project.user_id ? `User ${project.user_id}` : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAssignToUser(project.id),\n        children: \"Assign to Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, project.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"0T8O7YMW0LF2Q4XzPlZVqB5dJDE=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","newProject","setNewProject","title","description","status","userId","fetchProjects","response","get","data","error","console","handleAddProject","post","user_id","handleAssignToUser","projectId","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","project","id","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Desktop/Project-Management/client/src/components/Projects/Projects.js"],"sourcesContent":["//Projects.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Projects.scss';\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [newProject, setNewProject] = useState({\r\n    title: '',\r\n    description: '',\r\n    status: 'open',\r\n  });\r\n  const userId = 1; // Placeholder: Replace with actual logic to retrieve user ID\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/projects');\r\n      setProjects(response.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch projects\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddProject = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/projects', {\r\n        ...newProject,\r\n        user_id: userId, // Assign to user upon creation for simplicity\r\n      });\r\n      fetchProjects();\r\n      setNewProject({ title: '', description: '', status: 'open' });\r\n    } catch (error) {\r\n      console.error(\"Failed to add project\", error);\r\n    }\r\n  };\r\n\r\n  const handleAssignToUser = async (projectId) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\r\n        user_id: userId, // Reassign or confirm assignment to the user\r\n      });\r\n      fetchProjects();\r\n    } catch (error) {\r\n      console.error(\"Failed to assign project\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects-container\">\r\n      <h1>Projects</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={newProject.title}\r\n          onChange={(e) => setNewProject({ ...newProject, title: e.target.value })}\r\n        />\r\n        <textarea\r\n          placeholder=\"Description\"\r\n          value={newProject.description}\r\n          onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}\r\n        />\r\n        <button onClick={handleAddProject}>Add Project</button>\r\n      </div>\r\n      {projects.map((project) => (\r\n        <div key={project.id} className=\"project-item\">\r\n          <h2>{project.title}</h2>\r\n          <p>{project.description}</p>\r\n          <p>Status: {project.status}</p>\r\n          <p>Assigned to: {project.user_id ? `User ${project.user_id}` : 'None'}</p>\r\n          <button onClick={() => handleAssignToUser(project.id)}>Assign to Me</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}