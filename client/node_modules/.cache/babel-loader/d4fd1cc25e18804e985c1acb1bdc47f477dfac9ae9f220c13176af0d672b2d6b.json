{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Desktop\\\\Project-Management\\\\client\\\\src\\\\components\\\\Projects\\\\Projects.js\",\n  _s = $RefreshSig$();\n// Projects.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Projects.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState({\n    title: '',\n    description: '',\n    status: 'open'\n  });\n\n  // Define fetchProjects here so it can be reused\n  const fetchProjects = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/projects', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      setProjects(data);\n    } catch (error) {\n      console.error(\"Failed to fetch projects\", error);\n    }\n  };\n  useEffect(() => {\n    // Call fetchProjects when the component mounts\n    fetchProjects();\n  }, []);\n  const handleAddProject = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/projects', newProject, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      // Reset form after submission\n      setNewProject({\n        title: '',\n        description: '',\n        status: 'open'\n      });\n      // Re-fetch projects to update the list\n      fetchProjects();\n    } catch (error) {\n      console.error(\"Failed to add project\", error);\n    }\n  };\n  const handleStatusChange = async (projectId, status) => {\n    try {\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\n        status\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      // Re-fetch projects to reflect status change\n      fetchProjects();\n    } catch (error) {\n      console.error(\"Failed to update project status\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", project.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStatusChange(project.id, 'in progress'),\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStatusChange(project.id, 'done'),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, project.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"U0PA5xVmfj1xypNaiP7q8LgEBJ8=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","newProject","setNewProject","title","description","status","fetchProjects","data","get","headers","Authorization","localStorage","getItem","error","console","handleAddProject","post","handleStatusChange","projectId","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Desktop/Project-Management/client/src/components/Projects/Projects.js"],"sourcesContent":["// Projects.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Projects.scss';\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [newProject, setNewProject] = useState({ title: '', description: '', status: 'open' });\r\n\r\n  // Define fetchProjects here so it can be reused\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const { data } = await axios.get('http://localhost:5000/api/projects', {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\r\n      });\r\n      setProjects(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch projects\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Call fetchProjects when the component mounts\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const handleAddProject = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/projects', newProject, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\r\n      });\r\n      // Reset form after submission\r\n      setNewProject({ title: '', description: '', status: 'open' });\r\n      // Re-fetch projects to update the list\r\n      fetchProjects();\r\n    } catch (error) {\r\n      console.error(\"Failed to add project\", error);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (projectId, status) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, { status }, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\r\n      });\r\n      // Re-fetch projects to reflect status change\r\n      fetchProjects();\r\n    } catch (error) {\r\n      console.error(\"Failed to update project status\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects-container\">\r\n      <h1>Projects</h1>\r\n      {/* Input fields and button */}\r\n      {projects.map((project) => (\r\n        <div key={project.id} className=\"project-item\">\r\n          <h2>{project.title}</h2>\r\n          <p>{project.description}</p>\r\n          <p>Status: {project.status}</p>\r\n          <button onClick={() => handleStatusChange(project.id, 'in progress')}>In Progress</button>\r\n          <button onClick={() => handleStatusChange(project.id, 'done')}>Done</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}