{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Desktop\\\\Project-Management\\\\client\\\\src\\\\components\\\\Projects\\\\Projects.js\",\n  _s = $RefreshSig$();\n//Projects.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Projects.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState({\n    title: '',\n    description: '',\n    status: 'open'\n  });\n  const userId = localStorage.getItem('user_id'); // Ensure this key matches how you store it\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      // You need to adjust your API to return user-specific project information\n      const response = await axios.get(`http://localhost:5000/api/projects/user/${userId}`);\n      setProjects(response.data.projects);\n    } catch (error) {\n      console.error(\"Failed to fetch projects\", error);\n    }\n  };\n  const handleAddProject = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/projects', {\n        ...newProject,\n        // Assuming the backend handles project creation and the initial assignment\n        user_ids: [userId] // Adjust based on your backend's requirements\n      });\n      fetchProjects(); // Refetch projects to display the newly added one\n      setNewProject({\n        title: '',\n        description: '',\n        status: 'open'\n      }); // Reset form\n    } catch (error) {\n      console.error(\"Failed to add project\", error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewProject(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAssignToUser = async projectId => {\n    try {\n      // Adjust your API to handle multiple users assignment to a project\n      await axios.post(`http://localhost:5000/api/projects/${projectId}/assign`, {\n        user_id: userId // This should now add the user to the project's assigned users\n      });\n      fetchProjects(); // Refetch projects to update the assignment\n    } catch (error) {\n      console.error(\"Failed to assign project to user\", error);\n    }\n  };\n  const handleStatusChange = async (projectId, newStatus) => {\n    try {\n      // Adjust your API to update the status for the specific user-project assignment\n      await axios.put(`http://localhost:5000/api/projects/${projectId}/status`, {\n        user_id: userId,\n        status: newStatus\n      });\n      fetchProjects(); // Refetch projects to update the status\n    } catch (error) {\n      console.error(\"Failed to change project status\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-project-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newProject.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        value: newProject.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: newProject.status,\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"open\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Assigned to: \", project.assignedUsers.map(user => user.username).join(', ') || 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", project.userStatus || 'Not Assigned']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAssignToUser(project.id),\n        children: \"Assign to Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => handleStatusChange(project.id, e.target.value),\n        value: project.userStatus,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"open\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, project.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"0T8O7YMW0LF2Q4XzPlZVqB5dJDE=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","newProject","setNewProject","title","description","status","userId","localStorage","getItem","fetchProjects","response","get","data","error","console","handleAddProject","post","user_ids","handleInputChange","e","name","value","target","prev","handleAssignToUser","projectId","user_id","handleStatusChange","newStatus","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","project","assignedUsers","user","username","join","userStatus","id","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Desktop/Project-Management/client/src/components/Projects/Projects.js"],"sourcesContent":["//Projects.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Projects.scss';\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [newProject, setNewProject] = useState({\r\n    title: '',\r\n    description: '',\r\n    status: 'open',\r\n  });\r\n\r\n  const userId = localStorage.getItem('user_id'); // Ensure this key matches how you store it\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      // You need to adjust your API to return user-specific project information\r\n      const response = await axios.get(`http://localhost:5000/api/projects/user/${userId}`);\r\n      setProjects(response.data.projects);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch projects\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddProject = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/projects', {\r\n        ...newProject,\r\n        // Assuming the backend handles project creation and the initial assignment\r\n        user_ids: [userId] // Adjust based on your backend's requirements\r\n      });\r\n      fetchProjects(); // Refetch projects to display the newly added one\r\n      setNewProject({ title: '', description: '', status: 'open' }); // Reset form\r\n    } catch (error) {\r\n      console.error(\"Failed to add project\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewProject(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAssignToUser = async (projectId) => {\r\n    try {\r\n      // Adjust your API to handle multiple users assignment to a project\r\n      await axios.post(`http://localhost:5000/api/projects/${projectId}/assign`, {\r\n        user_id: userId // This should now add the user to the project's assigned users\r\n      });\r\n      fetchProjects(); // Refetch projects to update the assignment\r\n    } catch (error) {\r\n      console.error(\"Failed to assign project to user\", error);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (projectId, newStatus) => {\r\n    try {\r\n      // Adjust your API to update the status for the specific user-project assignment\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}/status`, {\r\n        user_id: userId,\r\n        status: newStatus\r\n      });\r\n      fetchProjects(); // Refetch projects to update the status\r\n    } catch (error) {\r\n      console.error(\"Failed to change project status\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects-container\">\r\n      <h1>Projects</h1>\r\n      <div className=\"add-project-form\">\r\n        {/* Form fields remain unchanged */}\r\n        <input\r\n          name=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={newProject.title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={newProject.description}\r\n          onChange={handleInputChange}\r\n        />\r\n        <select name=\"status\" value={newProject.status} onChange={handleInputChange}>\r\n          <option value=\"open\">Open</option>\r\n          <option value=\"in progress\">In Progress</option>\r\n          <option value=\"done\">Done</option>\r\n        </select>\r\n        <button onClick={handleAddProject}>Add Project</button>\r\n      </div>\r\n      {projects.map((project) => (\r\n        <div key={project.id} className=\"project-item\">\r\n          <h2>{project.title}</h2>\r\n          <p>{project.description}</p>\r\n          {/* Adjust display based on project's user-specific data */}\r\n          <p>Assigned to: {project.assignedUsers.map(user => user.username).join(', ') || 'None'}</p>\r\n          <p>Status: {project.userStatus || 'Not Assigned'}</p>\r\n          <button onClick={() => handleAssignToUser(project.id)}>Assign to Me</button>\r\n          <select onChange={(e) => handleStatusChange(project.id, e.target.value)} value={project.userStatus}>\r\n            <option value=\"open\">Open</option>\r\n            <option value=\"in progress\">In Progress</option>\r\n            <option value=\"done\">Done</option>\r\n          </select>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}