{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Desktop\\\\Project-Management\\\\client\\\\src\\\\components\\\\Issues\\\\Issues.js\",\n  _s = $RefreshSig$();\n//Issues.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Issues = () => {\n  _s();\n  const [issues, setIssues] = useState([]);\n  const [newIssue, setNewIssue] = useState({\n    title: '',\n    description: '',\n    projectId: '',\n    status: 'open'\n  });\n  useEffect(() => {\n    fetchIssues();\n  }, []);\n  const fetchIssues = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/issues');\n      setIssues(data);\n    } catch (error) {\n      console.error(\"Failed to fetch issues\", error);\n    }\n  };\n  const handleAddIssue = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/issues', newIssue);\n      fetchIssues();\n      setNewIssue({\n        title: '',\n        description: '',\n        projectId: '',\n        status: 'open'\n      }); // Reset\n    } catch (error) {\n      console.error(\"Failed to add issue\", error);\n    }\n  };\n  const handleStatusChange = async (issueId, status) => {\n    try {\n      await axios.put(`http://localhost:5000/api/issues/${issueId}`, {\n        status\n      });\n      fetchIssues();\n    } catch (error) {\n      console.error(\"Failed to update issue status\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Issues\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: newIssue.title,\n      onChange: e => setNewIssue({\n        ...newIssue,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      value: newIssue.description,\n      onChange: e => setNewIssue({\n        ...newIssue,\n        description: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Project ID\",\n      value: newIssue.projectId,\n      onChange: e => setNewIssue({\n        ...newIssue,\n        projectId: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddIssue,\n      children: \"Add Issue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), issues.map(issue => {\n      var _issue$user;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: issue.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: issue.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", issue.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Assigned to: \", ((_issue$user = issue.user) === null || _issue$user === void 0 ? void 0 : _issue$user.username) || 'Not assigned']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStatusChange(issue.id, 'in progress'),\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStatusChange(issue.id, 'done'),\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, issue.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Issues, \"QY4iD4VTnt3dy2uZkSJqvy2gdFI=\");\n_c = Issues;\nexport default Issues;\nvar _c;\n$RefreshReg$(_c, \"Issues\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Issues","_s","issues","setIssues","newIssue","setNewIssue","title","description","projectId","status","fetchIssues","data","get","error","console","handleAddIssue","post","handleStatusChange","issueId","put","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","issue","_issue$user","user","username","id","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Desktop/Project-Management/client/src/components/Issues/Issues.js"],"sourcesContent":["//Issues.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Issues = () => {\r\n  const [issues, setIssues] = useState([]);\r\n  const [newIssue, setNewIssue] = useState({ title: '', description: '', projectId: '', status: 'open' });\r\n\r\n  useEffect(() => {\r\n    fetchIssues();\r\n  }, []);\r\n\r\n  const fetchIssues = async () => {\r\n    try {\r\n      const { data } = await axios.get('http://localhost:5000/api/issues');\r\n      setIssues(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch issues\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddIssue = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/issues', newIssue);\r\n      fetchIssues();\r\n      setNewIssue({ title: '', description: '', projectId: '', status: 'open' }); // Reset\r\n    } catch (error) {\r\n      console.error(\"Failed to add issue\", error);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (issueId, status) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/issues/${issueId}`, { status });\r\n      fetchIssues();\r\n    } catch (error) {\r\n      console.error(\"Failed to update issue status\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Issues</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={newIssue.title}\r\n        onChange={(e) => setNewIssue({ ...newIssue, title: e.target.value })}\r\n      />\r\n      <textarea\r\n        placeholder=\"Description\"\r\n        value={newIssue.description}\r\n        onChange={(e) => setNewIssue({ ...newIssue, description: e.target.value })}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Project ID\"\r\n        value={newIssue.projectId}\r\n        onChange={(e) => setNewIssue({ ...newIssue, projectId: e.target.value })}\r\n      />\r\n      <button onClick={handleAddIssue}>Add Issue</button>\r\n      {issues.map((issue) => (\r\n        <div key={issue.id}>\r\n          <h2>{issue.title}</h2>\r\n          <p>{issue.description}</p>\r\n          <p>Status: {issue.status}</p>\r\n          <p>Assigned to: {issue.user?.username || 'Not assigned'}</p>\r\n          <button onClick={() => handleStatusChange(issue.id, 'in progress')}>In Progress</button>\r\n          <button onClick={() => handleStatusChange(issue.id, 'done')}>Done</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Issues;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}