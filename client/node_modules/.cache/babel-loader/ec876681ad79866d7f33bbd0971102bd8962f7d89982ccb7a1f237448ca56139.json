{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Desktop\\\\Project-Management\\\\client\\\\src\\\\components\\\\Projects\\\\Projects.js\",\n  _s = $RefreshSig$();\n//Projects.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Projects.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState({\n    title: '',\n    description: '',\n    status: 'open'\n  });\n\n  // Correctly retrieve the logged-in user's ID\n  const userId = localStorage.getItem('user_id'); // Ensure this key matches how you store it\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/projects');\n      setProjects(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch projects\", error);\n    }\n  };\n  const handleAddProject = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/projects', {\n        ...newProject,\n        user_id: userId // Optionally add user_id if you want to automatically assign to the creator\n      });\n      console.log('Project added:', response.data);\n      fetchProjects(); // Refetch projects to display the newly added one\n      setNewProject({\n        title: '',\n        description: '',\n        status: 'open'\n      }); // Reset form\n    } catch (error) {\n      console.error(\"Failed to add project\", error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewProject(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAssignToUser = async projectId => {\n    try {\n      await axios.put(`http://localhost:5000/api/projects/${projectId}/assign`, {\n        user_id: userId // Assign the project to the logged-in user\n      });\n      fetchProjects(); // Refetch projects to update the assignment\n    } catch (error) {\n      console.error(\"Failed to assign project to user\", error);\n    }\n  };\n  const handleUnassignProject = async projectId => {\n    try {\n      await axios.put(`http://localhost:5000/api/projects/${projectId}/unassign`);\n      fetchProjects(); // Refetch projects to reflect the unassignment\n    } catch (error) {\n      console.error(\"Failed to unassign project\", error);\n    }\n  };\n  const handleStatusChange = async (projectId, newStatus) => {\n    try {\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\n        status: newStatus\n      });\n      fetchProjects(); // Refetch projects to update the status\n    } catch (error) {\n      console.error(\"Failed to change project status\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-project-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newProject.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        value: newProject.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: newProject.status,\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"open\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleStatusChange(project.id, e.target.value),\n          value: project.status,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"open\",\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"in progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"done\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Assigned to: \", project.user_id === userId ? 'Me' : project.username ? project.username : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), project.user_id === userId ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUnassignProject(project.id),\n        children: \"Unassign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAssignToUser(project.id),\n        children: \"Assign to Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, project.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"0T8O7YMW0LF2Q4XzPlZVqB5dJDE=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","newProject","setNewProject","title","description","status","userId","localStorage","getItem","fetchProjects","response","get","data","error","console","handleAddProject","post","user_id","log","handleInputChange","e","name","value","target","prev","handleAssignToUser","projectId","put","handleUnassignProject","handleStatusChange","newStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","project","id","username","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Desktop/Project-Management/client/src/components/Projects/Projects.js"],"sourcesContent":["//Projects.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Projects.scss';\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [newProject, setNewProject] = useState({\r\n    title: '',\r\n    description: '',\r\n    status: 'open',\r\n  });\r\n\r\n  // Correctly retrieve the logged-in user's ID\r\n  const userId = localStorage.getItem('user_id'); // Ensure this key matches how you store it\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/projects');\r\n      setProjects(response.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch projects\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddProject = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/projects', {\r\n        ...newProject,\r\n        user_id: userId // Optionally add user_id if you want to automatically assign to the creator\r\n      });\r\n      console.log('Project added:', response.data);\r\n      fetchProjects(); // Refetch projects to display the newly added one\r\n      setNewProject({ title: '', description: '', status: 'open' }); // Reset form\r\n    } catch (error) {\r\n      console.error(\"Failed to add project\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewProject(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAssignToUser = async (projectId) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}/assign`, {\r\n        user_id: userId // Assign the project to the logged-in user\r\n      });\r\n      fetchProjects(); // Refetch projects to update the assignment\r\n    } catch (error) {\r\n      console.error(\"Failed to assign project to user\", error);\r\n    }\r\n  };\r\n\r\n  const handleUnassignProject = async (projectId) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}/unassign`);\r\n      fetchProjects(); // Refetch projects to reflect the unassignment\r\n    } catch (error) {\r\n      console.error(\"Failed to unassign project\", error);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (projectId, newStatus) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\r\n        status: newStatus\r\n      });\r\n      fetchProjects(); // Refetch projects to update the status\r\n    } catch (error) {\r\n      console.error(\"Failed to change project status\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects-container\">\r\n      <h1>Projects</h1>\r\n      <div className=\"add-project-form\">\r\n        {/* Project creation form */}\r\n        <input\r\n          name=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={newProject.title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={newProject.description}\r\n          onChange={handleInputChange}\r\n        />\r\n        <select name=\"status\" value={newProject.status} onChange={handleInputChange}>\r\n          <option value=\"open\">Open</option>\r\n          <option value=\"in progress\">In Progress</option>\r\n          <option value=\"done\">Done</option>\r\n        </select>\r\n        <button onClick={handleAddProject}>Add Project</button>\r\n      </div>\r\n      {/* Projects list */}\r\n      {projects.map((project) => (\r\n        <div key={project.id} className=\"project-item\">\r\n          <h2>{project.title}</h2>\r\n          <p>{project.description}</p>\r\n          <p>Status:\r\n            <select onChange={(e) => handleStatusChange(project.id, e.target.value)} value={project.status}>\r\n              <option value=\"open\">Open</option>\r\n              <option value=\"in progress\">In Progress</option>\r\n              <option value=\"done\">Done</option>\r\n            </select>\r\n          </p>\r\n          <p>Assigned to: {project.user_id === userId ? 'Me' : (project.username ? project.username : 'None')}</p>\r\n          {/* Toggle button based on assignment status */}\r\n          {project.user_id === userId ? (\r\n            <button onClick={() => handleUnassignProject(project.id)}>Unassign</button>\r\n          ) : (\r\n            <button onClick={() => handleAssignToUser(project.id)}>Assign to Me</button>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}