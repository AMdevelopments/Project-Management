{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Desktop\\\\Project-Management\\\\client\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\n// Profile.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Profile.scss';\nimport axios from 'axios'; // Make sure you've installed axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [userDetails, setUserDetails] = useState({\n    email: '',\n    username: ''\n  });\n  const [projects, setProjects] = useState([]);\n  const [issues, setIssues] = useState([]);\n  const [passwords, setPasswords] = useState({\n    new_password: '',\n    confirm_password: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n      try {\n        // Fetch user details\n        let response = await axios.get('http://localhost:5000/api/user', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setUserDetails(response.data);\n\n        // Fetch user's projects\n        response = await axios.get('http://localhost:5000/api/user/projects', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setProjects(response.data);\n\n        // Fetch user's issues\n        response = await axios.get('http://localhost:5000/api/user/issues', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setIssues(response.data);\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n\n  // Handlers for user details and password change remain the same\n\n  // Additional handlers for project and issue status updates and unassignment\n  const updateProjectStatus = async (projectId, newStatus) => {\n    // Implement project status update logic\n  };\n  const updateIssueStatus = async (issueId, newStatus) => {\n    // Implement issue status update logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"projects-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", project.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"issues-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Issues\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), issues.map(issue => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: issue.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", issue.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, issue.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"mVEJklYLryJkLWBS0yiSk5PfcYY=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Profile","_s","userDetails","setUserDetails","email","username","projects","setProjects","issues","setIssues","passwords","setPasswords","new_password","confirm_password","navigate","fetchUserData","token","localStorage","getItem","response","get","headers","data","error","console","updateProjectStatus","projectId","newStatus","updateIssueStatus","issueId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","title","status","id","issue","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Desktop/Project-Management/client/src/components/Profile/Profile.js"],"sourcesContent":["// Profile.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Profile.scss';\r\nimport axios from 'axios'; // Make sure you've installed axios\r\n\r\nconst Profile = () => {\r\n  const [userDetails, setUserDetails] = useState({ email: '', username: '' });\r\n  const [projects, setProjects] = useState([]);\r\n  const [issues, setIssues] = useState([]);\r\n  const [passwords, setPasswords] = useState({ new_password: '', confirm_password: '' });\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Fetch user details\r\n        let response = await axios.get('http://localhost:5000/api/user', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n          },\r\n        });\r\n        setUserDetails(response.data);\r\n\r\n        // Fetch user's projects\r\n        response = await axios.get('http://localhost:5000/api/user/projects', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n          },\r\n        });\r\n        setProjects(response.data);\r\n\r\n        // Fetch user's issues\r\n        response = await axios.get('http://localhost:5000/api/user/issues', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n          },\r\n        });\r\n        setIssues(response.data);\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [navigate]);\r\n\r\n  // Handlers for user details and password change remain the same\r\n\r\n  // Additional handlers for project and issue status updates and unassignment\r\n  const updateProjectStatus = async (projectId, newStatus) => {\r\n    // Implement project status update logic\r\n  };\r\n\r\n  const updateIssueStatus = async (issueId, newStatus) => {\r\n    // Implement issue status update logic\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h1>Profile</h1>\r\n      {/* User details and password update form */}\r\n      <section className=\"projects-section\">\r\n        <h2>Your Projects</h2>\r\n        {projects.map((project) => (\r\n          <div key={project.id}>\r\n            <h3>{project.title}</h3>\r\n            <p>Status: {project.status}</p>\r\n            {/* Add button for status update and unassignment */}\r\n          </div>\r\n        ))}\r\n      </section>\r\n\r\n      <section className=\"issues-section\">\r\n        <h2>Your Issues</h2>\r\n        {issues.map((issue) => (\r\n          <div key={issue.id}>\r\n            <h3>{issue.title}</h3>\r\n            <p>Status: {issue.status}</p>\r\n            {/* Add button for status update and unassignment */}\r\n          </div>\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}