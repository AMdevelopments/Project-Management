{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Desktop\\\\Project-Management\\\\client\\\\src\\\\components\\\\Projects\\\\Projects.js\",\n  _s = $RefreshSig$();\n//Projects.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Projects.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState({\n    title: '',\n    description: '',\n    status: 'open',\n    user_ids: [] // Adjusted to manage multiple user IDs\n  });\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/projects');\n      setProjects(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch projects\", error);\n    }\n  };\n  const handleAddProject = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/projects', newProject);\n      console.log('Project added:', response.data);\n      fetchProjects(); // Refetch projects to display the newly added one\n      setNewProject({\n        title: '',\n        description: '',\n        status: 'open',\n        user_ids: []\n      }); // Reset form\n    } catch (error) {\n      console.error(\"Failed to add project\", error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"user_ids\") {\n      // Handling multiple select inputs for user_ids\n      const options = e.target.options;\n      const user_ids = [];\n      for (let i = 0, l = options.length; i < l; i++) {\n        if (options[i].selected) {\n          user_ids.push(options[i].value);\n        }\n      }\n      setNewProject(prev => ({\n        ...prev,\n        user_ids\n      }));\n    } else {\n      setNewProject(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleAssignToUser = async (projectId, userIds) => {\n    try {\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\n        user_ids: userIds // Assuming the API now expects an array of user IDs for assignments\n      });\n      fetchProjects(); // Refetch projects to update the assignment\n    } catch (error) {\n      console.error(\"Failed to assign project to user\", error);\n    }\n  };\n  const handleStatusChange = async (projectId, newStatus) => {\n    try {\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\n        status: newStatus\n      });\n      fetchProjects(); // Refetch projects to update the status\n    } catch (error) {\n      console.error(\"Failed to change project status\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-project-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newProject.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        value: newProject.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: newProject.status,\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"open\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        name: \"user_ids\",\n        value: newProject.user_ids,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleStatusChange(project.id, e.target.value),\n          value: project.status,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"open\",\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"in progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"done\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Assigned to: \", project.user_ids.join(\", \") || 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAssignToUser(project.id /* User IDs to assign */),\n        children: \"Assign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, project.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"7jRZBXbsmwFZh5OcbRSA/rNDHIs=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","newProject","setNewProject","title","description","status","user_ids","fetchProjects","response","get","data","error","console","handleAddProject","post","log","handleInputChange","e","name","value","target","options","i","l","length","selected","push","prev","handleAssignToUser","projectId","userIds","put","handleStatusChange","newStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","multiple","onClick","map","project","id","join","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Desktop/Project-Management/client/src/components/Projects/Projects.js"],"sourcesContent":["//Projects.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Projects.scss';\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [newProject, setNewProject] = useState({\r\n    title: '',\r\n    description: '',\r\n    status: 'open',\r\n    user_ids: [], // Adjusted to manage multiple user IDs\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/projects');\r\n      setProjects(response.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch projects\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddProject = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/projects', newProject);\r\n      console.log('Project added:', response.data);\r\n      fetchProjects(); // Refetch projects to display the newly added one\r\n      setNewProject({ title: '', description: '', status: 'open', user_ids: [] }); // Reset form\r\n    } catch (error) {\r\n      console.error(\"Failed to add project\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"user_ids\") {\r\n      // Handling multiple select inputs for user_ids\r\n      const options = e.target.options;\r\n      const user_ids = [];\r\n      for (let i = 0, l = options.length; i < l; i++) {\r\n        if (options[i].selected) {\r\n          user_ids.push(options[i].value);\r\n        }\r\n      }\r\n      setNewProject(prev => ({ ...prev, user_ids }));\r\n    } else {\r\n      setNewProject(prev => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleAssignToUser = async (projectId, userIds) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\r\n        user_ids: userIds // Assuming the API now expects an array of user IDs for assignments\r\n      });\r\n      fetchProjects(); // Refetch projects to update the assignment\r\n    } catch (error) {\r\n      console.error(\"Failed to assign project to user\", error);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (projectId, newStatus) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\r\n        status: newStatus\r\n      });\r\n      fetchProjects(); // Refetch projects to update the status\r\n    } catch (error) {\r\n      console.error(\"Failed to change project status\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects-container\">\r\n      <h1>Projects</h1>\r\n      <div className=\"add-project-form\">\r\n        <input\r\n          name=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={newProject.title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={newProject.description}\r\n          onChange={handleInputChange}\r\n        />\r\n        <select name=\"status\" value={newProject.status} onChange={handleInputChange}>\r\n          <option value=\"open\">Open</option>\r\n          <option value=\"in progress\">In Progress</option>\r\n          <option value=\"done\">Done</option>\r\n        </select>\r\n        {/* This part assumes you have a way to select multiple users, adjust as needed */}\r\n        <select multiple name=\"user_ids\" value={newProject.user_ids} onChange={handleInputChange}>\r\n          {/* Placeholder for user options, assuming you have a method to populate this */}\r\n          {/* <option value=\"user_id\">User Name</option> */}\r\n        </select>\r\n        <button onClick={handleAddProject}>Add Project</button>\r\n      </div>\r\n      {projects.map((project) => (\r\n        <div key={project.id} className=\"project-item\">\r\n          <h2>{project.title}</h2>\r\n          <p>{project.description}</p>\r\n          <p>Status:\r\n            <select onChange={(e) => handleStatusChange(project.id, e.target.value)} value={project.status}>\r\n              <option value=\"open\">Open</option>\r\n              <option value=\"in progress\">In Progress</option>\r\n              <option value=\"done\">Done</option>\r\n            </select>\r\n          </p>\r\n          <p>Assigned to: {project.user_ids.join(\", \") || 'None'}</p>\r\n          {/* Here you might want a way for the user to select multiple users for assignment, similar to the form above */}\r\n          <button onClick={() => handleAssignToUser(project.id, /* User IDs to assign */)}>Assign</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}