{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Desktop\\\\Project-Management\\\\client\\\\src\\\\components\\\\Projects\\\\Projects.js\",\n  _s = $RefreshSig$();\n//Projects.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState({\n    title: '',\n    description: '',\n    status: 'open'\n  });\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/projects', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      setProjects(data);\n    } catch (error) {\n      console.error(\"Failed to fetch projects\", error);\n    }\n  };\n  const handleAddProject = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/projects', newProject, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      fetchProjects();\n      setNewProject({\n        title: '',\n        description: '',\n        status: 'open'\n      }); // Reset form\n    } catch (error) {\n      console.error(\"Failed to add project\", error);\n    }\n  };\n  const handleStatusChange = async (projectId, status) => {\n    try {\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\n        status\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      fetchProjects();\n    } catch (error) {\n      console.error(\"Failed to update project status\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: newProject.title,\n      onChange: e => setNewProject({\n        ...newProject,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      value: newProject.description,\n      onChange: e => setNewProject({\n        ...newProject,\n        description: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddProject,\n      children: \"Add Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", project.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStatusChange(project.id, 'in progress'),\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStatusChange(project.id, 'done'),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, project.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"U0PA5xVmfj1xypNaiP7q8LgEBJ8=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","newProject","setNewProject","title","description","status","fetchProjects","data","get","headers","Authorization","localStorage","getItem","error","console","handleAddProject","post","handleStatusChange","projectId","put","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","project","id","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Desktop/Project-Management/client/src/components/Projects/Projects.js"],"sourcesContent":["//Projects.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [newProject, setNewProject] = useState({ title: '', description: '', status: 'open' });\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const { data } = await axios.get('http://localhost:5000/api/projects', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n        },\r\n      });\r\n      setProjects(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch projects\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddProject = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/projects', newProject, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n        },\r\n      });\r\n      fetchProjects();\r\n      setNewProject({ title: '', description: '', status: 'open' }); // Reset form\r\n    } catch (error) {\r\n      console.error(\"Failed to add project\", error);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (projectId, status) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, { status }, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n        },\r\n      });\r\n      fetchProjects();\r\n    } catch (error) {\r\n      console.error(\"Failed to update project status\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Projects</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={newProject.title}\r\n        onChange={(e) => setNewProject({ ...newProject, title: e.target.value })}\r\n      />\r\n      <textarea\r\n        placeholder=\"Description\"\r\n        value={newProject.description}\r\n        onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}\r\n      />\r\n      <button onClick={handleAddProject}>Add Project</button>\r\n      {projects.map((project) => (\r\n        <div key={project.id}>\r\n          <h2>{project.title}</h2>\r\n          <p>{project.description}</p>\r\n          <p>Status: {project.status}</p>\r\n          <button onClick={() => handleStatusChange(project.id, 'in progress')}>In Progress</button>\r\n          <button onClick={() => handleStatusChange(project.id, 'done')}>Done</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}