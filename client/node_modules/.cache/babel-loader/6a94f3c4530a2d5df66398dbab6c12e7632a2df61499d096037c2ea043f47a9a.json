{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Desktop\\\\Project-Management\\\\client\\\\src\\\\components\\\\Projects\\\\Projects.js\",\n  _s = $RefreshSig$();\n//Projects.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Projects.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState({\n    title: '',\n    description: '',\n    status: 'open'\n  });\n\n  // Assuming this is the method to retrieve the logged-in user's ID\n  const userId = localStorage.getItem('userId');\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/projects');\n      setProjects(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch projects\", error);\n    }\n  };\n  const handleAddProject = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/projects', {\n        ...newProject,\n        user_id: userId\n      });\n      fetchProjects();\n      setNewProject({\n        title: '',\n        description: '',\n        status: 'open'\n      }); // Reset form\n    } catch (error) {\n      console.error(\"Failed to add project\", error);\n    }\n  };\n  const handleAssignToUser = async projectId => {\n    try {\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\n        user_id: userId\n      });\n      fetchProjects();\n    } catch (error) {\n      console.error(\"Failed to assign project to user\", error);\n    }\n  };\n  const handleStatusChange = async (projectId, newStatus) => {\n    try {\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\n        status: newStatus\n      });\n      fetchProjects();\n    } catch (error) {\n      console.error(\"Failed to change project status\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newProject.title,\n        onChange: e => setNewProject({\n          ...newProject,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: newProject.description,\n        onChange: e => setNewProject({\n          ...newProject,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleStatusChange(project.id, e.target.value),\n          value: project.status,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"open\",\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"in progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"done\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Assigned to: \", project.username || 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAssignToUser(project.id),\n        children: \"Assign to Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, project.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"0T8O7YMW0LF2Q4XzPlZVqB5dJDE=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","newProject","setNewProject","title","description","status","userId","localStorage","getItem","fetchProjects","response","get","data","error","console","handleAddProject","post","user_id","handleAssignToUser","projectId","put","handleStatusChange","newStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","project","id","username","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Desktop/Project-Management/client/src/components/Projects/Projects.js"],"sourcesContent":["//Projects.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Projects.scss';\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [newProject, setNewProject] = useState({\r\n    title: '',\r\n    description: '',\r\n    status: 'open',\r\n  });\r\n\r\n  // Assuming this is the method to retrieve the logged-in user's ID\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/projects');\r\n      setProjects(response.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch projects\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddProject = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/projects', { ...newProject, user_id: userId });\r\n      fetchProjects();\r\n      setNewProject({ title: '', description: '', status: 'open' }); // Reset form\r\n    } catch (error) {\r\n      console.error(\"Failed to add project\", error);\r\n    }\r\n  };\r\n\r\n  const handleAssignToUser = async (projectId) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, { user_id: userId });\r\n      fetchProjects();\r\n    } catch (error) {\r\n      console.error(\"Failed to assign project to user\", error);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (projectId, newStatus) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, { status: newStatus });\r\n      fetchProjects();\r\n    } catch (error) {\r\n      console.error(\"Failed to change project status\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects-container\">\r\n      <h1>Projects</h1>\r\n      {/* Project creation form */}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={newProject.title}\r\n          onChange={(e) => setNewProject({ ...newProject, title: e.target.value })}\r\n        />\r\n        <textarea\r\n          placeholder=\"Description\"\r\n          value={newProject.description}\r\n          onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}\r\n        />\r\n        <button onClick={handleAddProject}>Add Project</button>\r\n      </div>\r\n\r\n      {projects.map((project) => (\r\n        <div key={project.id} className=\"project-item\">\r\n          <h2>{project.title}</h2>\r\n          <p>{project.description}</p>\r\n          <p>Status: <select onChange={(e) => handleStatusChange(project.id, e.target.value)} value={project.status}>\r\n              <option value=\"open\">Open</option>\r\n              <option value=\"in progress\">In Progress</option>\r\n              <option value=\"done\">Done</option>\r\n            </select>\r\n          </p>\r\n          <p>Assigned to: {project.username || 'None'}</p>\r\n          <button onClick={() => handleAssignToUser(project.id)}>Assign to Me</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}