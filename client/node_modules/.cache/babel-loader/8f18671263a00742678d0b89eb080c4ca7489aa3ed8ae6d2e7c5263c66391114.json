{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\Desktop\\\\Project-Management\\\\client\\\\src\\\\components\\\\Projects\\\\Projects.js\",\n  _s = $RefreshSig$();\n//Projects.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Projects.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState({\n    title: '',\n    description: '',\n    status: 'open',\n    user_ids: []\n  });\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/projects');\n      const projectsWithDefaultUserIds = response.data.map(project => ({\n        ...project,\n        user_ids: project.user_ids || [] // Ensures user_ids is always an array\n      }));\n      setProjects(projectsWithDefaultUserIds);\n    } catch (error) {\n      console.error(\"Failed to fetch projects\", error);\n    }\n  };\n  const handleAddProject = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/projects', newProject);\n      fetchProjects(); // Refetch projects to include the newly added one\n      setNewProject({\n        title: '',\n        description: '',\n        status: 'open',\n        user_ids: []\n      }); // Reset form\n    } catch (error) {\n      console.error(\"Failed to add project\", error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"user_ids\") {\n      const selectedOptions = Array.from(e.target.options).filter(option => option.selected).map(option => option.value);\n      setNewProject(prev => ({\n        ...prev,\n        user_ids: selectedOptions\n      }));\n    } else {\n      setNewProject(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleAssignToUser = async (projectId, userIds) => {\n    try {\n      // Send a PUT request to the backend to update the project's assigned users\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\n        user_ids: userIds // Send the array of user IDs to be assigned to the project\n      });\n      fetchProjects(); // Refetch projects to update the UI with the new assignments\n    } catch (error) {\n      console.error(\"Failed to assign project to user\", error);\n    }\n  };\n  const handleStatusChange = async (projectId, newStatus) => {\n    try {\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\n        status: newStatus\n      });\n      fetchProjects(); // Refetch projects to reflect the status update\n    } catch (error) {\n      console.error(\"Failed to change project status\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-project-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newProject.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        value: newProject.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: newProject.status,\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"open\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        name: \"user_ids\",\n        value: newProject.user_ids,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleStatusChange(project.id, e.target.value),\n          value: project.status,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"open\",\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"in progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"done\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Assigned to: \", project.user_ids.length > 0 ? project.user_ids.join(\", \") : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAssignToUser(project.id /* User IDs to assign */),\n        children: \"Assign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, project.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"c/RUSk0hGP0mg+u947sEDNHRhgk=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","newProject","setNewProject","title","description","status","user_ids","fetchProjects","response","get","projectsWithDefaultUserIds","data","map","project","error","console","handleAddProject","post","handleInputChange","e","name","value","target","selectedOptions","Array","from","options","filter","option","selected","prev","handleAssignToUser","projectId","userIds","put","handleStatusChange","newStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","multiple","onClick","id","length","join","_c","$RefreshReg$"],"sources":["C:/Users/adamm/Desktop/Project-Management/client/src/components/Projects/Projects.js"],"sourcesContent":["//Projects.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Projects.scss';\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [newProject, setNewProject] = useState({\r\n    title: '',\r\n    description: '',\r\n    status: 'open',\r\n    user_ids: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/projects');\r\n      const projectsWithDefaultUserIds = response.data.map(project => ({\r\n        ...project,\r\n        user_ids: project.user_ids || [] // Ensures user_ids is always an array\r\n      }));\r\n      setProjects(projectsWithDefaultUserIds);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch projects\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddProject = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/projects', newProject);\r\n      fetchProjects(); // Refetch projects to include the newly added one\r\n      setNewProject({ title: '', description: '', status: 'open', user_ids: [] }); // Reset form\r\n    } catch (error) {\r\n      console.error(\"Failed to add project\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"user_ids\") {\r\n      const selectedOptions = Array.from(e.target.options)\r\n                                    .filter(option => option.selected)\r\n                                    .map(option => option.value);\r\n      setNewProject(prev => ({ ...prev, user_ids: selectedOptions }));\r\n    } else {\r\n      setNewProject(prev => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleAssignToUser = async (projectId, userIds) => {\r\n    try {\r\n      // Send a PUT request to the backend to update the project's assigned users\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\r\n        user_ids: userIds, // Send the array of user IDs to be assigned to the project\r\n      });\r\n      fetchProjects(); // Refetch projects to update the UI with the new assignments\r\n    } catch (error) {\r\n      console.error(\"Failed to assign project to user\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleStatusChange = async (projectId, newStatus) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/projects/${projectId}`, {\r\n        status: newStatus\r\n      });\r\n      fetchProjects(); // Refetch projects to reflect the status update\r\n    } catch (error) {\r\n      console.error(\"Failed to change project status\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects-container\">\r\n      <h1>Projects</h1>\r\n      <div className=\"add-project-form\">\r\n        {/* Form for adding new projects */}\r\n        <input\r\n          name=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={newProject.title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={newProject.description}\r\n          onChange={handleInputChange}\r\n        />\r\n        <select name=\"status\" value={newProject.status} onChange={handleInputChange}>\r\n          <option value=\"open\">Open</option>\r\n          <option value=\"in progress\">In Progress</option>\r\n          <option value=\"done\">Done</option>\r\n        </select>\r\n        <select multiple name=\"user_ids\" value={newProject.user_ids} onChange={handleInputChange}>\r\n          {/* Options for user_ids should be added here */}\r\n        </select>\r\n        <button onClick={handleAddProject}>Add Project</button>\r\n      </div>\r\n      {projects.map((project) => (\r\n        <div key={project.id} className=\"project-item\">\r\n          <h2>{project.title}</h2>\r\n          <p>{project.description}</p>\r\n          <p>Status:\r\n            <select onChange={(e) => handleStatusChange(project.id, e.target.value)} value={project.status}>\r\n              <option value=\"open\">Open</option>\r\n              <option value=\"in progress\">In Progress</option>\r\n              <option value=\"done\">Done</option>\r\n            </select>\r\n          </p>\r\n          <p>Assigned to: {project.user_ids.length > 0 ? project.user_ids.join(\", \") : 'None'}</p>\r\n          {/* Here you might want a way for the user to select multiple users for assignment, similar to the form above */}\r\n          <button onClick={() => handleAssignToUser(project.id, /* User IDs to assign */)}>Assign</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}